From 006dd2f19262c89ebbd0f4f2b920825783e7c107 Mon Sep 17 00:00:00 2001
From: LIU Hao <lh_mouse@126.com>
Date: Wed, 29 Jun 2022 07:38:24 -0700
Subject: [PATCH] Work around -Warray-bounds warning for __readfsdword and
 __readgsqword
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

在 2022-06-29 19:51, Ozkan Sezer 写道:

    Noticed this in github CI runs of vkQuake. Is the warning bogus?

    D:/a/_temp/msys64/mingw32/include/psdk_inc/intrin-impl.h:2164:1:
    warning: array subscript 0 is outside array bounds of 'long unsigned int[0]' [-Warray-bounds]
      2164 | __buildreadseg(__readfsdword, unsigned __LONG32, "fs", "l")
           | ^~~~~~~~~~~~~~

I have been aware of this too. The asm statement is passed an
indirection by a constant offset in the FS/GS segment, which itself is
valid, but GCC thinks it was about the default DS segment and fails to
calculate its size.

This may be solved for GCC by casting the input offset to a pointer to
an array of unknown bound. So instead of writing

  [offset] "m" ((*(y *) (size_t) Offset))

we write

  [offset] "m" ((*(y (*)[]) (size_t) Offset))

Unfortunately Clang does not like this:

  test.c:5:53: error: dereference of pointer to incomplete type 'unsigned long[]'

Let's guard this so that only newer GCC sees this.

Proposed-in: https://sourceforge.net/p/mingw-w64/mailman/message/37674508/
Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
---
 mingw-w64-headers/include/psdk_inc/intrin-impl.h | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/mingw-w64-headers/include/psdk_inc/intrin-impl.h b/mingw-w64-headers/include/psdk_inc/intrin-impl.h
index 24624a501..2dbd0002c 100644
--- a/mingw-w64-headers/include/psdk_inc/intrin-impl.h
+++ b/mingw-w64-headers/include/psdk_inc/intrin-impl.h
@@ -217,11 +217,17 @@ Parameters: (FunctionName, DataType, Segment)
    Type: b, w, l, q
    */
 
+#if defined(__GNUC__) && __GNUC__ > 11
+#define __buildreadseg_star (*)[]
+#else
+#define __buildreadseg_star *
+#endif
+
 #define __buildreadseg(x, y, z, a) y x(unsigned __LONG32 Offset) { \
     y ret; \
     __asm__ ("mov{" a " %%" z ":%[offset], %[ret] | %[ret], %%" z ":%[offset]}" \
         : [ret] "=r" (ret) \
-        : [offset] "m" ((*(y *) (size_t) Offset))); \
+        : [offset] "m" ((*(y __buildreadseg_star) (size_t) Offset))); \
     return ret; \
 }
 
-- 
2.43.0

